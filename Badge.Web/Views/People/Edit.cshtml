@model Badge.EF.Entity.Person

@{
    ViewData["Title"] = "Edit";
}

<h2>Edit</h2>

<form asp-action="Edit">
    <div class="form-horizontal">
        <h4>Person</h4>
        <hr />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="IdPerson" />
        <div class="form-group">
            <label asp-for="Nome" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="Nome" class="form-control" />
                <span asp-validation-for="Nome" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="Cognome" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="Cognome" class="form-control" />
                <span asp-validation-for="Cognome" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <a asp-action="Edit" asp-route-id="@Model.IdPerson">

                <button type="submit" class="btn tooltipped" data-position="bottom" data-delay="50" data-tooltip="Save">

                    <i class="large material-icons">save</i>
                </button>
            </a>
        </div>
    </div>
</form>


<a asp-action="Index">
    <button type="button" class="btn tooltipped" data-position="bottom" data-delay="50" data-tooltip="Back to List">
        <i class="material-icons">arrow_back</i>
    </button>
</a>

    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

<script>
        $(function () {
            $('[data-toggle="tooltip"]').tooltip();
        })
</script>
    }
